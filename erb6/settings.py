""" 
Django settings for erb6 project.

# This is the import hint showing which version of Django version is used in this project!
Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from django.contrib.messages import constants as messages # Add messages framework for login page
from pathlib import Path
from dotenv import load_dotenv
import os

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent   # New added


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SITE_SECRET_KEY')   # New added

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# DEBUG = False

# Cloud deploy IP will be input here.
ALLOWED_HOSTS = []
# ALLOWED_HOSTS = ["localhost", "127.0.0.1"]


# Application definition

INSTALLED_APPS = [
    # Base Packages
    'django.contrib.admin',
    'django.contrib.auth',          # Login/logout
    'django.contrib.contenttypes',
    'django.contrib.sessions',      # Middleware
    'django.contrib.messages',      # Communication
    'django.contrib.staticfiles',
    'django.contrib.humanize',      # Add djanog extra library for datetime, currency calcuations

    "debug_toolbar",                # Register downloaded APPS ~>python -m pip install django-debug-toolbar
    'pages.apps.PagesConfig',       # Register pages folder as APPS level
    'listings.apps.ListingsConfig', # Defined listings Apps
    'realtors.apps.RealtorsConfig', # Defined realtors Apps
    'accounts.apps.AccountsConfig', # Defined accounts Apps
    'contacts.apps.ContactsConfig', # Defined contacts Apps
]

# These middleware calls Django login library
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "debug_toolbar.middleware.DebugToolbarMiddleware", # Debug Toolbar
]

ROOT_URLCONF = 'erb6.urls'  # New add

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],   # Register templates folder so Django knows it.
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# Following define WSGI(Static)/ASGI(Dynamic) server config.
# It depends on how project deal with how much data.
WSGI_APPLICATION = 'erb6.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# PostgresDB Config
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'erb6db',
        'USER': 'postgres',
        'PASSWORD' : os.getenv('DB_PASSWORD'),
        #'PASSWORD': 'pgDBerb6',
        'HOST' : 'localhost' # For deployment, this will change.
    }
}

# Original Python Django DATABASE Config
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Hong_Kong'    # Change to Hong Kong

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/
# Added by user

STATIC_ROOT = os.path.join(BASE_DIR,'static')
STATIC_URL = 'static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'erb6/static')
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Debug Toolbar - Configure Internal IPs
INTERNAL_IPS = [
    "127.0.0.1",
]

# Add media folder and paths
MEDIA_ROOT = os.path.join(BASE_DIR,'media')
MEDIA_URL = '/media/'

# Declare message
# Pass variables to Bootstrap message box
MESSAGE_TAGS = {
    messages.ERROR  : 'danger',
    messages.SUCCESS: 'success'
}

# Add Email backend
EMAIL_BACKEND       = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST          = 'smtp.gmail.com'
EMAIL_PORT          = 587
EMAIL_HOST_USER     = os.getenv('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')
EMAIL_USE_TLS       = True